#!/bin/sh
#
# Slackware build script for wxWidgets (GTK)
# Copyright (C) 2008-2012 Georgi D. Sotirov <gdsotirov@dir.bg>
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
#
# Visit SlackPack at http://sotirov-bg.net/slackpack/
#
# $Id: wxwidgets.SlackBuild,v 1.8 2017/04/22 10:58:27 gsotirov Exp $
#

. ../../slack-package.conf

NAME=wxWidgets
PNAME=`echo $NAME | tr "[:upper:]" "[:lower:]"`
VERSION=2.8.12
ARCH=${ARCH:-i486}
BUILD=${BUILD:-1}

CWD=${CWD:-`pwd`}
TMP=${TMP:-/tmp}

if [ ! -e $TMP ]; then
  mkdir -p $TMP # location to build the source
fi

SRC=$TMP/$NAME-$VERSION
if [ -e $SRC -a -d $SRC ]; then
  echo "Source directory '$SRC' already exists! Plaese, move it or remove it."
  exit 1
fi

PKG=$TMP/package-$PNAME
if [ -e $PKG -a -d $PKG ]; then
  echo "Package creation directory '$PKG' already exists! Please, move it or remove it."
  exit 2
fi
mkdir -p $PKG

# Extract the sources
cd $TMP
tar -xvf $CWD/$NAME-$VERSION.tar.?z* || exit 3
cd $SRC
fix_source

# Configure with most complete and generic options. Do not control what
# classes are included in the library
CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
./configure --build=$ARCH-slackware-linux \
            --host=$ARCH-slackware-linux \
            --prefix=/usr \
            --libdir=/usr/lib${LIBDIRSUFFIX} \
            --sysconfdir=/etc \
            --localstatedir=/var \
            --enable-gui \
            --enable-plugins \
            --enable-optimise \
            --enable-shared \
            --enable-stl \
            --enable-intl \
            --enable-config \
            --enable-sockets \
            --enable-dataobj \
            --enable-ipc \
            --enable-exceptions \
            --enable-std_iostreams \
            --enable-std_string \
            --enable-unicode \
            --enable-threads \
            --enable-help \
            --enable-xrc \
            --enable-aui \
            --enable-printarch \
            --enable-mdi \
            --enable-controls \
            --enable-accel \
            --enable-commondlg \
            --enable-gif \
            --enable-pcx \
            --enable-tga \
            --enable-iff \
            --enable-pnm \
            --enable-xpm \
            --with-gtk \
            --with-libiconv \
            --with-libmspack \
            --with-opengl \
            --with-sdl \
            --with-regex \
            --with-zlib \
            --with-expat || exit 4
# Doesn't compile - wxUSE_ACCESSIBILITY is currently only supported under wxMSW
#           --enable-accessibility \

# Build & install
make -j4 || exit 5
make DESTDIR=$PKG install || exit 6

# Prepare
bin_perms $PKG
( cd $PKG; strip_bin; strip_lib )
DOCFILES="$DOCFILES docs/gtk docs/html docs/tech docs/*.txt docs/index.htm"
( cd $SRC; create_docs $PKG $PNAME-$VERSION )
( cd $PKG/usr/doc/$PNAME-$VERSION
  cp licence.txt COPYING
  cp readme.txt README )

install -m 755 -d $PKG/install
install -m 644 $CWD/slack-desc       $PKG/install/slack-desc
install -m 644 $CWD/slack-required   $PKG/install/slack-required

SBDIR=$PKG/usr/src/slackbuilds/$PNAME-$VERSION
install -m 755 -d $SBDIR
install -m 644 $CWD/slack-desc        $SBDIR/slack-desc
install -m 644 $CWD/slack-required    $SBDIR/slack-required
install -m 644 $CWD/$PNAME.SlackBuild $SBDIR/$PNAME.SlackBuild

# Assemble
PKGNAME=$PNAME-$VERSION-$ARCH-$BUILD$MYIN
cd $PKG
makepkg -l y -c n $PKG_DIR/$PKGNAME.txz
cd $PKG_DIR
md5sum $PKGNAME.txz > $PKGNAME.txz.md5
cp $CWD/slack-desc $PKGNAME.txt

# Clean up (optionally)
if [ "$1" = "--cleanup" ]; then
  rm -rf $SRC
  rm -rf $PKG
fi

